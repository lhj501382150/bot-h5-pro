{"remainingRequest":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\bot-h5\\bot-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\bot-h5\\bot-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\bot-h5\\bot-ui\\src\\views\\Sys\\Para.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\bot-h5\\bot-ui\\src\\views\\Sys\\Para.vue","mtime":1702475008478},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}