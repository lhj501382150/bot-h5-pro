{"remainingRequest":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace\\bot-h5\\bot-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\bot-h5\\bot-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\bot-h5\\bot-ui\\src\\views\\Sys\\Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\bot-h5\\bot-ui\\src\\views\\Sys\\Menu.vue","mtime":1702475008477},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBLdEJ1dHRvbiBmcm9tICJAL3ZpZXdzL0NvcmUvS3RCdXR0b24iOwppbXBvcnQgVGFibGVUcmVlQ29sdW1uIGZyb20gIkAvdmlld3MvQ29yZS9UYWJsZVRyZWVDb2x1bW4iOwppbXBvcnQgUG9wdXBUcmVlSW5wdXQgZnJvbSAiQC9jb21wb25lbnRzL1BvcHVwVHJlZUlucHV0IjsKaW1wb3J0IEZhSWNvblRvb2x0aXAgZnJvbSAiQC9jb21wb25lbnRzL0ZhSWNvblRvb2x0aXAiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUG9wdXBUcmVlSW5wdXQ6IFBvcHVwVHJlZUlucHV0LAogICAgS3RCdXR0b246IEt0QnV0dG9uLAogICAgVGFibGVUcmVlQ29sdW1uOiBUYWJsZVRyZWVDb2x1bW4sCiAgICBGYUljb25Ub29sdGlwOiBGYUljb25Ub29sdGlwCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2l6ZTogInNtYWxsIiwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGZpbHRlcnM6IHsKICAgICAgICBuYW1lOiAiIgogICAgICB9LAogICAgICB0YWJsZVRyZWVEZGF0YTogW10sCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBtZW51VHlwZUxpc3Q6IFsi55uu5b2VIiwgIuiPnOWNlSIsICLmjInpkq4iXSwKICAgICAgZGF0YUZvcm06IHsKICAgICAgICBpZDogMCwKICAgICAgICB0eXBlOiAxLAogICAgICAgIG5hbWU6ICIiLAogICAgICAgIHBhcmVudElkOiAwLAogICAgICAgIHBhcmVudE5hbWU6ICIiLAogICAgICAgIHVybDogIiIsCiAgICAgICAgcGVybXM6ICIiLAogICAgICAgIG9yZGVyTnVtOiAwLAogICAgICAgIGljb246ICIiLAogICAgICAgIGljb25MaXN0OiBbXQogICAgICB9LAogICAgICBkYXRhUnVsZTogewogICAgICAgIG5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLoj5zljZXlkI3np7DkuI3og73kuLrnqboiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgcG9wdXBUcmVlRGF0YTogW10sCiAgICAgIHBvcHVwVHJlZVByb3BzOiB7CiAgICAgICAgbGFiZWw6ICJuYW1lIiwKICAgICAgICBjaGlsZHJlbjogImNoaWxkcmVuIgogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5pWw5o2uCiAgICBmaW5kVHJlZURhdGE6IGZ1bmN0aW9uIGZpbmRUcmVlRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuJGFwaS5tZW51LmZpbmRNZW51VHJlZSgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnRhYmxlVHJlZURkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgX3RoaXMucG9wdXBUcmVlRGF0YSA9IF90aGlzLmdldFBhcmVudE1lbnVUcmVlKHJlcy5kYXRhKTsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPluS4iue6p+iPnOWNleagkQogICAgZ2V0UGFyZW50TWVudVRyZWU6IGZ1bmN0aW9uIGdldFBhcmVudE1lbnVUcmVlKHRhYmxlVHJlZURkYXRhKSB7CiAgICAgIHZhciBwYXJlbnQgPSB7CiAgICAgICAgcGFyZW50SWQ6IDAsCiAgICAgICAgbmFtZTogIumhtue6p+iPnOWNlSIsCiAgICAgICAgY2hpbGRyZW46IHRhYmxlVHJlZURkYXRhCiAgICAgIH07CiAgICAgIHJldHVybiBbcGFyZW50XTsKICAgIH0sCiAgICAvLyDmmL7npLrmlrDlop7nlYzpnaIKICAgIGhhbmRsZUFkZDogZnVuY3Rpb24gaGFuZGxlQWRkKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgICB0aGlzLmRhdGFGb3JtID0gewogICAgICAgIGlkOiAwLAogICAgICAgIHR5cGU6IDEsCiAgICAgICAgdHlwZUxpc3Q6IFsi55uu5b2VIiwgIuiPnOWNlSIsICLmjInpkq4iXSwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBwYXJlbnRJZDogMCwKICAgICAgICBwYXJlbnROYW1lOiAiIiwKICAgICAgICB1cmw6ICIiLAogICAgICAgIHBlcm1zOiAiIiwKICAgICAgICBvcmRlck51bTogMCwKICAgICAgICBpY29uOiAiIiwKICAgICAgICBpY29uTGlzdDogW10KICAgICAgfTsKICAgIH0sCiAgICAvLyDmmL7npLrnvJbovpHnlYzpnaIKICAgIGhhbmRsZUVkaXQ6IGZ1bmN0aW9uIGhhbmRsZUVkaXQocm93KSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5kYXRhRm9ybSwgcm93KTsKICAgIH0sCiAgICAvLyDliKDpmaQKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKHJvdykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGNvbmZpcm0oIuehruiupOWIoOmZpOmAieS4reiusOW9leWQl++8nyIsICLmj5DnpLoiLCB7CiAgICAgICAgdHlwZTogIndhcm5pbmciCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBwYXJhbXMgPSBfdGhpczIuZ2V0RGVsZXRlSWRzKFtdLCByb3cpOwoKICAgICAgICBfdGhpczIuJGFwaS5tZW51LmJhdGNoRGVsZXRlKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczIuZmluZFRyZWVEYXRhKCk7CgogICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogIuWIoOmZpOaIkOWKnyIsCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIgogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPluWIoOmZpOeahOWMheWQq+WtkOiPnOWNleeahGlk5YiX6KGoCiAgICBnZXREZWxldGVJZHM6IGZ1bmN0aW9uIGdldERlbGV0ZUlkcyhpZHMsIHJvdykgewogICAgICBpZHMucHVzaCh7CiAgICAgICAgaWQ6IHJvdy5pZAogICAgICB9KTsKCiAgICAgIGlmIChyb3cuY2hpbGRyZW4gIT0gbnVsbCkgewogICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByb3cuY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgIHRoaXMuZ2V0RGVsZXRlSWRzKGlkcywgcm93LmNoaWxkcmVuW2ldKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBpZHM7CiAgICB9LAogICAgLy8g6I+c5Y2V5qCR6YCJ5LitCiAgICBoYW5kbGVUcmVlU2VsZWN0Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVUcmVlU2VsZWN0Q2hhbmdlKGRhdGEsIG5vZGUpIHsKICAgICAgdGhpcy5kYXRhRm9ybS5wYXJlbnRJZCA9IGRhdGEuaWQ7CiAgICAgIHRoaXMuZGF0YUZvcm0ucGFyZW50TmFtZSA9IGRhdGEubmFtZTsKICAgIH0sCiAgICAvLyDlm77moIfpgInkuK0KICAgIGljb25BY3RpdmVIYW5kbGU6IGZ1bmN0aW9uIGljb25BY3RpdmVIYW5kbGUoaWNvbk5hbWUpIHsKICAgICAgdGhpcy5kYXRhRm9ybS5pY29uID0gaWNvbk5hbWU7CiAgICB9LAogICAgLy8g6KGo5Y2V5o+Q5LqkCiAgICBzdWJtaXRGb3JtOiBmdW5jdGlvbiBzdWJtaXRGb3JtKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbImRhdGFGb3JtIl0udmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBfdGhpczMuJGNvbmZpcm0oIuehruiupOaPkOS6pOWQl++8nyIsICLmj5DnpLoiLCB7fSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzMy5lZGl0TG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIHZhciBwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCBfdGhpczMuZGF0YUZvcm0pOwoKICAgICAgICAgICAgX3RoaXMzLiRhcGkubWVudS5zYXZlKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgX3RoaXMzLmVkaXRMb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICLmk43kvZzmiJDlip8iLAogICAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzMy4kcmVmc1siZGF0YUZvcm0iXS5yZXNldEZpZWxkcygpOwoKICAgICAgICAgICAgICAgIF90aGlzMy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICLmk43kvZzlpLHotKUsICIgKyByZXMubXNnLAogICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF90aGlzMy5maW5kVHJlZURhdGEoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZmluZFRyZWVEYXRhKCk7CiAgfQp9Ow=="},null]}