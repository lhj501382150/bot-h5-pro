{"remainingRequest":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\soft\\workspace\\bot-manager\\bot-ui\\src\\mock\\index.js","dependencies":[{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\src\\mock\\index.js","mtime":1702475008408},{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmVuZHMtd2l0aCI7CmltcG9ydCBNb2NrIGZyb20gJ21vY2tqcyc7CmltcG9ydCB7IGJhc2VVcmwgfSBmcm9tICdAL3V0aWxzL2dsb2JhbCc7CmltcG9ydCAqIGFzIGxvZ2luIGZyb20gJy4vbW9kdWxlcy9sb2dpbic7CmltcG9ydCAqIGFzIHVzZXIgZnJvbSAnLi9tb2R1bGVzL3VzZXInOwppbXBvcnQgKiBhcyByb2xlIGZyb20gJy4vbW9kdWxlcy9yb2xlJzsKaW1wb3J0ICogYXMgbWVudSBmcm9tICcuL21vZHVsZXMvbWVudSc7CmltcG9ydCAqIGFzIGxvZyBmcm9tICcuL21vZHVsZXMvbG9nJzsKaW1wb3J0ICogYXMgbG9naW5sb2cgZnJvbSAnLi9tb2R1bGVzL2xvZ2lubG9nJzsgLy8gMS4g5byA5ZCvL+WFs+mXrVvmiYDmnInmqKHlnZdd5oum5oiqLCDpgJrov4fosINbb3Blbk1vY2vlj4LmlbBd6K6+572uLgovLyAyLiDlvIDlkK8v5YWz6ZetW+S4muWKoeaooeWdl13mi6bmiKosIOmAmui/h+iwg+eUqGZuQ3JlYXRl5pa55rOVW2lzT3BlbuWPguaVsF3orr7nva4uCi8vIDMuIOW8gOWQry/lhbPpl61b5Lia5Yqh5qih5Z2X5Lit5p+Q5Liq6K+35rGCXeaLpuaIqiwg6YCa6L+H5Ye95pWw6L+U5Zue5a+56LGh5Lit55qEW2lzT3BlbuWxnuaAp13orr7nva4uCi8vIGxldCBvcGVuTW9jayA9IHRydWUKCnZhciBvcGVuTW9jayA9IGZhbHNlOwpmbkNyZWF0ZSh1c2VyLCBvcGVuTW9jayk7CmZuQ3JlYXRlKHJvbGUsIG9wZW5Nb2NrKTsKZm5DcmVhdGUobWVudSwgb3Blbk1vY2spOwpmbkNyZWF0ZShsb2csIG9wZW5Nb2NrKTsKZm5DcmVhdGUobG9naW5sb2csIG9wZW5Nb2NrKTsKZm5DcmVhdGUobG9naW4sIG9wZW5Nb2NrKTsKLyoqDQogKiDliJvlu7ptb2Nr5qih5ouf5pWw5o2uDQogKiBAcGFyYW0geyp9IG1vZCDmqKHlnZcNCiAqIEBwYXJhbSB7Kn0gaXNPcGVuIOaYr+WQpuW8gOWQrz8NCiAqLwoKZnVuY3Rpb24gZm5DcmVhdGUobW9kKSB7CiAgdmFyIGlzT3BlbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdHJ1ZTsKCiAgaWYgKGlzT3BlbikgewogICAgZm9yICh2YXIga2V5IGluIG1vZCkgewogICAgICAoZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuaXNPcGVuICE9PSBmYWxzZSkgewogICAgICAgICAgdmFyIHVybCA9IGJhc2VVcmw7CgogICAgICAgICAgaWYgKCF1cmwuZW5kc1dpdGgoIi8iKSkgewogICAgICAgICAgICB1cmwgPSB1cmwgKyAiLyI7CiAgICAgICAgICB9CgogICAgICAgICAgdXJsID0gdXJsICsgcmVzLnVybDsKICAgICAgICAgIE1vY2subW9jayhuZXcgUmVnRXhwKHVybCksIHJlcy50eXBlLCBmdW5jdGlvbiAob3B0cykgewogICAgICAgICAgICBvcHRzWydkYXRhJ10gPSBvcHRzLmJvZHkgPyBKU09OLnBhcnNlKG9wdHMuYm9keSkgOiBudWxsOwogICAgICAgICAgICBkZWxldGUgb3B0cy5ib2R5OwogICAgICAgICAgICBjb25zb2xlLmxvZygnXG4nKTsKICAgICAgICAgICAgY29uc29sZS5sb2coJyVjbW9ja+aLpuaIqiwg6K+35rGCOiAnLCAnY29sb3I6Ymx1ZScsIG9wdHMpOwogICAgICAgICAgICBjb25zb2xlLmxvZygnJWNtb2Nr5oum5oiqLCDlk43lupQ6ICcsICdjb2xvcjpibHVlJywgcmVzLmRhdGEpOwogICAgICAgICAgICByZXR1cm4gcmVzLmRhdGE7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pKG1vZFtrZXldKCkgfHwge30pOwogICAgfQogIH0KfQ=="},{"version":3,"sources":["C:/soft/workspace/bot-manager/bot-ui/src/mock/index.js"],"names":["Mock","baseUrl","login","user","role","menu","log","loginlog","openMock","fnCreate","mod","isOpen","key","res","url","endsWith","mock","RegExp","type","opts","body","JSON","parse","console","data"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,eAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B,C,CAEA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,KAAf;AACAC,QAAQ,CAACN,IAAD,EAAOK,QAAP,CAAR;AACAC,QAAQ,CAACL,IAAD,EAAOI,QAAP,CAAR;AACAC,QAAQ,CAACJ,IAAD,EAAOG,QAAP,CAAR;AACAC,QAAQ,CAACH,GAAD,EAAME,QAAN,CAAR;AACAC,QAAQ,CAACF,QAAD,EAAWC,QAAX,CAAR;AACAC,QAAQ,CAACP,KAAD,EAAQM,QAAR,CAAR;AAEA;;;;;;AAKA,SAASC,QAAT,CAAmBC,GAAnB,EAAuC;AAAA,MAAfC,MAAe,uEAAN,IAAM;;AAErC,MAAIA,MAAJ,EAAY;AACV,SAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACnB,OAAC,UAACG,GAAD,EAAS;AACR,YAAIA,GAAG,CAACF,MAAJ,KAAe,KAAnB,EAA0B;AACxB,cAAIG,GAAG,GAAGb,OAAV;;AACA,cAAG,CAACa,GAAG,CAACC,QAAJ,CAAa,GAAb,CAAJ,EAAuB;AACrBD,YAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACD;;AACDA,UAAAA,GAAG,GAAGA,GAAG,GAAGD,GAAG,CAACC,GAAhB;AACAd,UAAAA,IAAI,CAACgB,IAAL,CAAU,IAAIC,MAAJ,CAAWH,GAAX,CAAV,EAA2BD,GAAG,CAACK,IAA/B,EAAqC,UAACC,IAAD,EAAU;AAC7CA,YAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeA,IAAI,CAACC,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACC,IAAhB,CAAZ,GAAoC,IAAnD;AACA,mBAAOD,IAAI,CAACC,IAAZ;AACAG,YAAAA,OAAO,CAACjB,GAAR,CAAY,IAAZ;AACAiB,YAAAA,OAAO,CAACjB,GAAR,CAAY,gBAAZ,EAA8B,YAA9B,EAA4Ca,IAA5C;AACAI,YAAAA,OAAO,CAACjB,GAAR,CAAY,gBAAZ,EAA8B,YAA9B,EAA4CO,GAAG,CAACW,IAAhD;AACA,mBAAOX,GAAG,CAACW,IAAX;AACD,WAPD;AAQD;AACF,OAhBD,EAgBGd,GAAG,CAACE,GAAD,CAAH,MAAc,EAhBjB;AAiBD;AACF;AACF","sourcesContent":["import Mock from 'mockjs'\r\nimport { baseUrl } from '@/utils/global'\r\nimport * as login from './modules/login'\r\nimport * as user from './modules/user'\r\nimport * as role from './modules/role'\r\nimport * as menu from './modules/menu'\r\nimport * as log from './modules/log'\r\nimport * as loginlog from './modules/loginlog'\r\n\r\n// 1. 开启/关闭[所有模块]拦截, 通过调[openMock参数]设置.\r\n// 2. 开启/关闭[业务模块]拦截, 通过调用fnCreate方法[isOpen参数]设置.\r\n// 3. 开启/关闭[业务模块中某个请求]拦截, 通过函数返回对象中的[isOpen属性]设置.\r\n// let openMock = true\r\nlet openMock = false\r\nfnCreate(user, openMock)\r\nfnCreate(role, openMock)\r\nfnCreate(menu, openMock)\r\nfnCreate(log, openMock)\r\nfnCreate(loginlog, openMock)\r\nfnCreate(login, openMock)\r\n\r\n/**\r\n * 创建mock模拟数据\r\n * @param {*} mod 模块\r\n * @param {*} isOpen 是否开启?\r\n */\r\nfunction fnCreate (mod, isOpen = true) {\r\n  \r\n  if (isOpen) {\r\n    for (var key in mod) {\r\n      ((res) => {\r\n        if (res.isOpen !== false) {\r\n          let url = baseUrl\r\n          if(!url.endsWith(\"/\")) {\r\n            url = url + \"/\"\r\n          }\r\n          url = url + res.url\r\n          Mock.mock(new RegExp(url), res.type, (opts) => {\r\n            opts['data'] = opts.body ? JSON.parse(opts.body) : null\r\n            delete opts.body\r\n            console.log('\\n')\r\n            console.log('%cmock拦截, 请求: ', 'color:blue', opts)\r\n            console.log('%cmock拦截, 响应: ', 'color:blue', res.data)\r\n            return res.data\r\n          })\r\n        }\r\n      })(mod[key]() || {})\r\n    }\r\n  }\r\n}\r\n"]}]}