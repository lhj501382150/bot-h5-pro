{"remainingRequest":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\bot-h5\\bot-ui\\src\\views\\Trade\\Compents\\UploadExcel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\bot-h5\\bot-ui\\src\\views\\Trade\\Compents\\UploadExcel.vue","mtime":1702475008483},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-h5\\bot-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBiYXNlVXJsIH0gZnJvbSAnQC91dGlscy9nbG9iYWwnDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdVcGxvYWRFeGNlbCcsDQogIHByb3BzOnsNCiAgICB1cmw6JycNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdXBsb2FkVXJsOiBiYXNlVXJsICsgdGhpcy51cmwsDQogICAgICAvLyDlr7zlhaXmjInpkq7nmoTmlofmnKwNCiAgICAgIGltcG9ydERhdGFUZXh0OiAn5a+85YWl5pWw5o2uJywNCiAgICAgIC8vIOWvvOWFpeaMiemSrueahOWbvuaghw0KICAgICAgaW1wb3J0RGF0YUljb246ICdlbC1pY29uLXVwbG9hZDInLA0KICAgICAgLy8g5a+85YWl5oyJ6ZKu5piv5ZCm6KKr56aB55SoDQogICAgICBpbXBvcnREaXNhYmxlZDogZmFsc2UNCiAgICB9Ow0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaGFuZGxlUmVtb3ZlKGZpbGUpIHsNCiAgICAgIGNvbnNvbGUubG9nKGZpbGUpOw0KICAgIH0sDQogICAgaGFuZGxlUGljdHVyZUNhcmRQcmV2aWV3KGZpbGUpIHsNCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7DQogICAgfSwNCiAgICBiZWZvcmVBdmF0YXJVcGxvYWQoZmlsZSl7DQogICAgICBjb25zdCB0eXBlID0gZmlsZS50eXBlDQogICAgICBjb25zdCBpc0V4Y2VsID0gJ3hscyx4bHN4Jy5pbmRleE9mKHR5cGUpID4gLTE7DQoNCiAgICAgIGlmICghaXNFeGNlbCkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDmlofku7blj6rog73mmK8gRXhjZWwg5qC85byPIScpOw0KICAgICAgfQ0KICAgICAgcmV0dXJuIGlzRXhjZWw7DQogICAgfSwNCiAgICAvLyDlr7zlhaXmlofku7blpLHotKXlkI7lm57osIMNCiAgICAgIG9uRXJyb3IoKSB7DQogICAgICAgICAgdGhpcy5pbXBvcnREYXRhVGV4dCA9ICflr7zlhaXmlbDmja4nOw0KICAgICAgICAgIHRoaXMuaW1wb3J0RGF0YUljb24gPSAnZWwtaWNvbi11cGxvYWQyJzsNCiAgICAgICAgICB0aGlzLmltcG9ydERpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgdGhpcy5pbml0RW1wcygpOw0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5a+85YWl5aSx6LSl77yBIik7DQogICAgICB9LA0KICAgICAgLy8g5a+85YWl5paH5Lu25oiQ5Yqf5ZCO5Zue6LCDDQogICAgICBvblN1Y2Nlc3MocmVzKSB7DQogICAgICAgICAvLyDmiJDlip/lkI7mlofmnKzkv67mlLnkuLrljp/mnaXnmoTlr7zlhaXmlbDmja4NCiAgICAgICAgICB0aGlzLmltcG9ydERhdGFUZXh0ID0gJ+WvvOWFpeaVsOaNric7DQogICAgICAgICAvLyDlm77moIfkv67mlLkNCiAgICAgICAgICB0aGlzLmltcG9ydERhdGFJY29uID0gJ2VsLWljb24tdXBsb2FkMic7DQogICAgICAgIC8vIOWwhuS4iuS8oOe7hOS7tuaUueS4uuWFgeiuuOS9v+eUqA0KICAgICAgICAgIHRoaXMuaW1wb3J0RGlzYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgaWYocmVzLmNvZGUgPT0gMjAwKXsNCiAgICAgICAgICAvLyDosIPnlKjliLfmlrDmlbDmja7nmoTmlrnms5UNCiAgICAgICAgICB0aGlzLiRlbWl0KCdmaW5kUGFnZScsbnVsbCkNCiAgICAgICAgICAvLyBtZXNzYWdlIOW8ueWHuua2iOaBrw0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5a+85YWl5oiQ5Yqf77yBIik7DQogICAgICAgIH1lbHNlew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuWvvOWFpeWksei0pe+8miIrIHJlcy5tc2cpOw0KICAgICAgICB9DQoNCiAgICAgIH0sDQogICAgICAvLyDkuIrkvKDmlofku7bosIPnlKgNCiAgICAgIGFzeW5jIGJlZm9yZVVwbG9hZChmaWxlKSB7DQogICAgICAgICBsZXQgZmxhZyA9IGF3YWl0IHRoaXMuJGNvbmZpcm0oIuehruiupOimgeWvvOWFpeWQl++8nyIsIuaPkOekuiIse30pDQogICAgICAgICAgaWYoZmxhZyl7DQogICAgICAgICAgICAgIC8vIOWwhuaWh+acrOS/ruaUueS4uuato+WcqOWvvOWFpQ0KICAgICAgICAgICAgdGhpcy5pbXBvcnREYXRhVGV4dCA9ICfmraPlnKjlr7zlhaUnOw0KICAgICAgICAgICAgLy8g5L+u5pS55YW25Zu+5qCHDQogICAgICAgICAgICB0aGlzLmltcG9ydERhdGFJY29uID0gJ2VsLWljb24tbG9hZGluZyc7DQogICAgICAgICAgICAvLyDlsIblhbbkuIrkvKDnu4Tku7bmmoLml7bnpoHnlKgNCiAgICAgICAgICAgIHRoaXMuaW1wb3J0RGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgIH0NCiAgICAgICAgICByZXR1cm4gZmxhZzsNCiAgICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCg0KICB9DQp9DQo="},{"version":3,"sources":["UploadExcel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"UploadExcel.vue","sourceRoot":"src/views/Trade/Compents","sourcesContent":["<template>\r\n<div>\r\n  <el-upload\r\n        :show-file-list=\"false\"\r\n        :before-upload=\"beforeUpload\"\r\n        :on-success=\"onSuccess\"\r\n        :on-error=\"onError\"\r\n        :disabled=\"importDisabled\"\r\n        accept=\".xlsx\"\r\n        style=\"display: inline-flex;margin-right: 10px;\"\r\n        :action=\"uploadUrl\">\r\n    <el-button size=\"mini\" :disabled=\"importDisabled\" type=\"primary\" :icon=\"importDataIcon\">\r\n        {{importDataText}}\r\n    </el-button>\r\n</el-upload>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { baseUrl } from '@/utils/global'\r\nexport default {\r\n  name: 'UploadExcel',\r\n  props:{\r\n    url:''\r\n  },\r\n  data() {\r\n    return {\r\n      uploadUrl: baseUrl + this.url,\r\n      // 导入按钮的文本\r\n      importDataText: '导入数据',\r\n      // 导入按钮的图标\r\n      importDataIcon: 'el-icon-upload2',\r\n      // 导入按钮是否被禁用\r\n      importDisabled: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleRemove(file) {\r\n      console.log(file);\r\n    },\r\n    handlePictureCardPreview(file) {\r\n      this.dialogVisible = true;\r\n    },\r\n    beforeAvatarUpload(file){\r\n      const type = file.type\r\n      const isExcel = 'xls,xlsx'.indexOf(type) > -1;\r\n\r\n      if (!isExcel) {\r\n        this.$message.error('上传文件只能是 Excel 格式!');\r\n      }\r\n      return isExcel;\r\n    },\r\n    // 导入文件失败后回调\r\n      onError() {\r\n          this.importDataText = '导入数据';\r\n          this.importDataIcon = 'el-icon-upload2';\r\n          this.importDisabled = false;\r\n          this.initEmps();\r\n          this.$message.success(\"导入失败！\");\r\n      },\r\n      // 导入文件成功后回调\r\n      onSuccess(res) {\r\n         // 成功后文本修改为原来的导入数据\r\n          this.importDataText = '导入数据';\r\n         // 图标修改\r\n          this.importDataIcon = 'el-icon-upload2';\r\n        // 将上传组件改为允许使用\r\n          this.importDisabled = false;\r\n        if(res.code == 200){\r\n          // 调用刷新数据的方法\r\n          this.$emit('findPage',null)\r\n          // message 弹出消息\r\n          this.$message.success(\"导入成功！\");\r\n        }else{\r\n          this.$message.error(\"导入失败：\"+ res.msg);\r\n        }\r\n\r\n      },\r\n      // 上传文件调用\r\n      async beforeUpload(file) {\r\n         let flag = await this.$confirm(\"确认要导入吗？\",\"提示\",{})\r\n          if(flag){\r\n              // 将文本修改为正在导入\r\n            this.importDataText = '正在导入';\r\n            // 修改其图标\r\n            this.importDataIcon = 'el-icon-loading';\r\n            // 将其上传组件暂时禁用\r\n            this.importDisabled = true;\r\n          }\r\n          return flag;\r\n      }\r\n  },\r\n  mounted() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}