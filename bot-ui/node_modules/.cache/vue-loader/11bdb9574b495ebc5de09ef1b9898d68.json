{"remainingRequest":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\soft\\workspace\\bot-manager\\bot-ui\\src\\views\\Core\\TableTreeColumn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\src\\views\\Core\\TableTreeColumn.vue","mtime":1702475008430},{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\soft\\workspace\\bot-manager\\bot-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpc0FycmF5IGZyb20gJ2xvZGFzaC9pc0FycmF5JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3RhYmxlLXRyZWUtY29sdW1uJywKICBwcm9wczogewogICAgcHJvcDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICB0cmVlS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2lkJwogICAgfSwKICAgIHBhcmVudEtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdwYXJlbnRJZCcKICAgIH0sCiAgICBsZXZlbEtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdsZXZlbCcKICAgIH0sCiAgICBjaGlsZEtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdjaGlsZHJlbicKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoaWxkU3R5bGVzIChyb3cpIHsKICAgICAgcmV0dXJuIHsgJ3BhZGRpbmctbGVmdCc6IChyb3dbdGhpcy5sZXZlbEtleV0gKiAyNSkgKyAncHgnIH0KICAgIH0sCiAgICBpY29uQ2xhc3NlcyAocm93KSB7CiAgICAgIHJldHVybiBbICFyb3cuX2V4cGFuZGVkID8gJ2VsLWljb24tY2FyZXQtcmlnaHQnIDogJ2VsLWljb24tY2FyZXQtYm90dG9tJyBdCiAgICB9LAogICAgaWNvblN0eWxlcyAocm93KSB7CiAgICAgIHJldHVybiB7ICd2aXNpYmlsaXR5JzogdGhpcy5oYXNDaGlsZChyb3cpID8gJ3Zpc2libGUnIDogJ2hpZGRlbicgfQogICAgfSwKICAgIGhhc0NoaWxkIChyb3cpIHsKICAgICAgcmV0dXJuIChpc0FycmF5KHJvd1t0aGlzLmNoaWxkS2V5XSkgJiYgcm93W3RoaXMuY2hpbGRLZXldLmxlbmd0aCA+PSAxKSB8fCBmYWxzZQogICAgfSwKICAgIC8vIOWIh+aNouWkhOeQhgogICAgdG9nZ2xlSGFuZGxlIChpbmRleCwgcm93KSB7CiAgICAgIGlmICh0aGlzLmhhc0NoaWxkKHJvdykpIHsKICAgICAgICB2YXIgZGF0YSA9IHRoaXMuJHBhcmVudC5zdG9yZS5zdGF0ZXMuZGF0YS5zbGljZSgwKQogICAgICAgIGRhdGFbaW5kZXhdLl9leHBhbmRlZCA9ICFkYXRhW2luZGV4XS5fZXhwYW5kZWQKICAgICAgICBpZiAoZGF0YVtpbmRleF0uX2V4cGFuZGVkKSB7CiAgICAgICAgICBkYXRhID0gZGF0YS5zcGxpY2UoMCwgaW5kZXggKyAxKS5jb25jYXQocm93W3RoaXMuY2hpbGRLZXldKS5jb25jYXQoZGF0YSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZGF0YSA9IHRoaXMucmVtb3ZlQ2hpbGROb2RlKGRhdGEsIHJvd1t0aGlzLnRyZWVLZXldKQogICAgICAgIH0KICAgICAgICB0aGlzLiRwYXJlbnQuc3RvcmUuY29tbWl0KCdzZXREYXRhJywgZGF0YSkKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICB0aGlzLiRwYXJlbnQuZG9MYXlvdXQoKQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICAvLyDnp7vpmaTlrZDoioLngrkKICAgIHJlbW92ZUNoaWxkTm9kZSAoZGF0YSwgcGFyZW50SWQpIHsKICAgICAgdmFyIHBhcmVudElkcyA9IGlzQXJyYXkocGFyZW50SWQpID8gcGFyZW50SWQgOiBbcGFyZW50SWRdCiAgICAgIGlmIChwYXJlbnRJZC5sZW5ndGggPD0gMCkgewogICAgICAgIHJldHVybiBkYXRhCiAgICAgIH0KICAgICAgdmFyIGlkcyA9IFtdCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChwYXJlbnRJZHMuaW5kZXhPZihkYXRhW2ldW3RoaXMucGFyZW50S2V5XSkgIT09IC0xICYmIHBhcmVudElkcy5pbmRleE9mKGRhdGFbaV1bdGhpcy50cmVlS2V5XSkgPT09IC0xKSB7CiAgICAgICAgICBpZHMucHVzaChkYXRhLnNwbGljZShpLCAxKVswXVt0aGlzLnRyZWVLZXldKQogICAgICAgICAgaS0tCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnJlbW92ZUNoaWxkTm9kZShkYXRhLCBpZHMpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TableTreeColumn.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableTreeColumn.vue","sourceRoot":"src/views/Core","sourcesContent":["<template>\r\n  <el-table-column :prop=\"prop\" v-bind=\"$attrs\">\r\n    <template slot-scope=\"scope\">\r\n      <span @click.prevent=\"toggleHandle(scope.$index, scope.row)\" :style=\"childStyles(scope.row)\">\r\n        <i :class=\"iconClasses(scope.row)\" :style=\"iconStyles(scope.row)\"></i>\r\n        {{ scope.row[prop] }}\r\n      </span>\r\n    </template>\r\n  </el-table-column>\r\n</template>\r\n\r\n<script>\r\n  import isArray from 'lodash/isArray'\r\n  export default {\r\n    name: 'table-tree-column',\r\n    props: {\r\n      prop: {\r\n        type: String\r\n      },\r\n      treeKey: {\r\n        type: String,\r\n        default: 'id'\r\n      },\r\n      parentKey: {\r\n        type: String,\r\n        default: 'parentId'\r\n      },\r\n      levelKey: {\r\n        type: String,\r\n        default: 'level'\r\n      },\r\n      childKey: {\r\n        type: String,\r\n        default: 'children'\r\n      }\r\n    },\r\n    methods: {\r\n      childStyles (row) {\r\n        return { 'padding-left': (row[this.levelKey] * 25) + 'px' }\r\n      },\r\n      iconClasses (row) {\r\n        return [ !row._expanded ? 'el-icon-caret-right' : 'el-icon-caret-bottom' ]\r\n      },\r\n      iconStyles (row) {\r\n        return { 'visibility': this.hasChild(row) ? 'visible' : 'hidden' }\r\n      },\r\n      hasChild (row) {\r\n        return (isArray(row[this.childKey]) && row[this.childKey].length >= 1) || false\r\n      },\r\n      // 切换处理\r\n      toggleHandle (index, row) {\r\n        if (this.hasChild(row)) {\r\n          var data = this.$parent.store.states.data.slice(0)\r\n          data[index]._expanded = !data[index]._expanded\r\n          if (data[index]._expanded) {\r\n            data = data.splice(0, index + 1).concat(row[this.childKey]).concat(data)\r\n          } else {\r\n            data = this.removeChildNode(data, row[this.treeKey])\r\n          }\r\n          this.$parent.store.commit('setData', data)\r\n          this.$nextTick(() => {\r\n            this.$parent.doLayout()\r\n          })\r\n        }\r\n      },\r\n      // 移除子节点\r\n      removeChildNode (data, parentId) {\r\n        var parentIds = isArray(parentId) ? parentId : [parentId]\r\n        if (parentId.length <= 0) {\r\n          return data\r\n        }\r\n        var ids = []\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (parentIds.indexOf(data[i][this.parentKey]) !== -1 && parentIds.indexOf(data[i][this.treeKey]) === -1) {\r\n            ids.push(data.splice(i, 1)[0][this.treeKey])\r\n            i--\r\n          }\r\n        }\r\n        return this.removeChildNode(data, ids)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}