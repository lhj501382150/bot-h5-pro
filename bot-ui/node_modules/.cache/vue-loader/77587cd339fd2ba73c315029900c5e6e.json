{"remainingRequest":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\bot-manager\\bot-ui\\src\\views\\Trade\\WareFirmRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\bot-manager\\bot-ui\\src\\views\\Trade\\WareFirmRule.vue","mtime":1702475008496},{"path":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgS3RUYWJsZSBmcm9tICJAL3ZpZXdzL0NvcmUvS3RUYWJsZSINCmltcG9ydCBLdEJ1dHRvbiBmcm9tICJAL3ZpZXdzL0NvcmUvS3RCdXR0b24iDQppbXBvcnQgVGFibGVDb2x1bW5GaWx0ZXJEaWFsb2cgZnJvbSAiQC92aWV3cy9Db3JlL1RhYmxlQ29sdW1uRmlsdGVyRGlhbG9nIg0KaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAiQC91dGlscy9kYXRldGltZSINCmV4cG9ydCBkZWZhdWx0IHsNCgljb21wb25lbnRzOnsNCgkJS3RUYWJsZSwNCgkJS3RCdXR0b24sDQoJCVRhYmxlQ29sdW1uRmlsdGVyRGlhbG9nDQoJfSwNCglkYXRhKCkgew0KCQlyZXR1cm4gew0KICAgICAgc2l6ZTogJ3NtYWxsJywNCiAgICAgIGZpbHRlcnM6IHsNCiAgICAgICAgc25hbWU6ICcnLA0KICAgICAgICBydHlwZTonJywNCiAgICAgICAgaXN0cmk6JycNCiAgICAgIH0sDQogICAgICBjb2x1bW5zOiBbXSwNCiAgICAgIGJ1dHRvbnM6W10sDQogICAgICBmaWx0ZXJDb2x1bW5zOiBbXSwNCiAgICAgIHBhZ2VSZXF1ZXN0OiB7cGFnZU51bTogMSwgcGFnZVNpemU6IDUwfSwNCiAgICAgIHBhZ2VSZXN1bHQ6IHt9LA0KDQogICAgICBvcGVyYXRpb246IGZhbHNlLCAvLyB0cnVlOuaWsOWiniwgZmFsc2U657yW6L6RDQogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwgLy8g5paw5aKe57yW6L6R55WM6Z2i5piv5ZCm5pi+56S6DQogICAgICBlZGl0TG9hZGluZzogZmFsc2UsDQogICAgICBkYXRhRm9ybVJ1bGVzOiB7DQogICAgICAgIG53YXJlbm86IFsNCiAgICAgICAgICB7cmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fpgInmi6nmnYPnm4rllYblk4EnLCB0cmlnZ2VyOiAnYmx1cid9DQogICAgICAgIF0sDQogICAgICAgIHNuYW1lOiBbDQogICAgICAgICAge3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl6KeE5YiZ5ZCN56ewJywgdHJpZ2dlcjogJ2JsdXInfQ0KICAgICAgICBdLA0KICAgICAgICBtZW06IFsNCiAgICAgICAgICB7cmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXop4TliJnor7TmmI4nLCB0cmlnZ2VyOiAnYmx1cid9DQogICAgICAgIF0sDQogICAgICAgIHJ0eXBlOiBbDQogICAgICAgICAge3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup57G75Z6LJywgdHJpZ2dlcjogJ2JsdXInfQ0KICAgICAgICBdLA0KICAgICAgICBpc3RyaTogWw0KICAgICAgICAgIHtyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeaYr+WQpuW8gOWQrycsIHRyaWdnZXI6ICdibHVyJ30NCiAgICAgICAgXSwNCiAgICAgICAgdHJpdGltZTogWw0KICAgICAgICAgIHtyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeinpuWPkeaXtumXtCcsIHRyaWdnZXI6ICdibHVyJ30NCiAgICAgICAgXQ0KICAgICAgfSwNCiAgICAgIC8vIOaWsOWinue8lui+keeVjOmdouaVsOaNrg0KICAgICAgZGF0YUZvcm06IHsNCiAgICAgICAgaWQ6IDAsDQogICAgICAgIHdhcmVpbmZvOiAnJywNCiAgICAgICAgc25hbWU6ICcnLA0KICAgICAgICBtZW06ICcnLA0KICAgICAgICBnaXZlaW5mbzogJycsDQogICAgICAgIG93YXJlaW5mbzogJycsDQogICAgICAgIHJ0eXBlOiAnJywNCiAgICAgICAgdHJpdGltZTogJycsDQogICAgICAgIGlzdHJpOiAnJw0KICAgICAgfSwNCiAgICAgIHdhcmVub3M6W10sDQogICAgICB0YWJMaXN0OltdLA0KICAgICAgdGFiSXRlbTp7fSwNCiAgICAgIHBhcmFzOltdLA0KICAgICAgcnR5cGVzOlsNCiAgICAgICAge2tleTonMScsdmFsOifmjIHmnInotYTkuqcnfSwNCiAgICAgICAge2tleTonMicsdmFsOifmjqjojZDkurrmlbAnfSwNCiAgICAgICAge2tleTonMycsdmFsOifotK3kubDpgIHmnYPnm4onfSwNCiAgICAgICAge2tleTonNCcsdmFsOiflr7zlhaXpgIHmnYPnm4onfQ0KICAgICAgXSwNCiAgICAgIGlzdHJpczpbDQogICAgICAgIHtrZXk6J1knLHZhbDon5byA5ZCvJ30sDQogICAgICAgIHtrZXk6J04nLHZhbDon5pyq5byA5ZCvJ30NCiAgICAgIF0NCiAgICB9DQoJfSwNCgltZXRob2RzOiB7DQoJCS8vIOiOt+WPluWIhumhteaVsOaNrg0KCQlmaW5kUGFnZTogZnVuY3Rpb24gKGRhdGEpIHsNCgkJCWlmKGRhdGEgIT09IG51bGwpIHsNCgkJCQl0aGlzLnBhZ2VSZXF1ZXN0ID0gZGF0YS5wYWdlUmVxdWVzdA0KCQkJfWVsc2V7DQogICAgICAgIHRoaXMucGFnZVJlcXVlc3QgPSB7cGFnZU51bTogMSwgcGFnZVNpemU6IDUwfQ0KICAgICAgfQ0KCQkJdGhpcy5wYWdlUmVxdWVzdC5wYXJhbXMgPSB7DQogICAgICAgICdzbmFtZUBMSUtFJzp0aGlzLmZpbHRlcnMuc25hbWUsDQogICAgICAgIHJ0eXBlOiB0aGlzLmZpbHRlcnMucnR5cGUsDQogICAgICAgIGlzdHJpOiB0aGlzLmZpbHRlcnMuaXN0cmkNCgkJCX0NCgkJCXRoaXMuJGFwaS53YXJlRmlybVJ1bGUuZmluZFBhZ2UodGhpcy5wYWdlUmVxdWVzdCkudGhlbigocmVzKSA9PiB7DQoJCQkJdGhpcy5wYWdlUmVzdWx0ID0gcmVzLmRhdGENCgkJCX0pLnRoZW4oZGF0YSE9bnVsbD9kYXRhLmNhbGxiYWNrOicnKQ0KCQl9LA0KICAgIGZpbmRXYXJlOmZ1bmN0aW9uKCl7DQogICAgICBsZXQgcGFyYSA9IHt9DQogICAgICB0aGlzLiRhcGkud2FyZUZpcm1SdWxlLmZpbmRXYXJlKHBhcmEpLnRoZW4ocmVzPT57DQogICAgICAgIHRoaXMud2FyZW5vcyA9IHJlcy5kYXRhDQogICAgICB9KQ0KICAgIH0sDQogICAgZmluZFBhcmEoKXsNCgkJICBsZXQgcGFyYSA9IHt9DQogICAgICB0aGlzLiRhcGkud2FyZUZpcm1QYXJhLmZpbmRQYXJhbGlzdChwYXJhKS50aGVuKHJlcyA9PnsNCiAgICAgICAgdGhpcy5wYXJhcyA9IHJlcy5kYXRhDQogICAgICB9KQ0KICAgIH0sDQogICAgYWRkUm93KCl7DQogICAgICB0aGlzLnRhYkxpc3QucHVzaCh7V0FSRU5POicnLE5VTTonJ30pDQogICAgfSwNCiAgICBkZWxSb3cocm93LGluZGV4KXsNCiAgICAgIHRoaXMudGFiTGlzdC5zcGxpY2UoaW5kZXgsMSkNCiAgICB9LA0KCQkvLyDmibnph4/liKDpmaQNCgkJaGFuZGxlRGVsZXRlOiBmdW5jdGlvbiAoZGF0YSkgew0KCQkJdGhpcy4kYXBpLndhcmVGaXJtUnVsZS5iYXRjaERlbGV0ZShkYXRhLnBhcmFtcykudGhlbihkYXRhIT1udWxsP2RhdGEuY2FsbGJhY2s6JycpDQoJCX0sDQoJCS8vIOaYvuekuuaWsOWinueVjOmdog0KCQloYW5kbGVBZGQ6IGZ1bmN0aW9uICgpIHsNCiAgICAgIHRoaXMudGFiTGlzdCA9IFtdDQoJCQl0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlDQoJCQl0aGlzLm9wZXJhdGlvbiA9IHRydWUNCgkJCXRoaXMuZGF0YUZvcm09IHsNCiAgICAgICAgIGlkOiAwLA0KICAgICAgICB3YXJlaW5mbzogJycsDQogICAgICAgIHNuYW1lOiAnJywNCiAgICAgICAgbWVtOiAnJywNCiAgICAgICAgZ2l2ZWluZm86IHRoaXMucGFyYXMsDQogICAgICAgIG93YXJlaW5mbzogJycNCiAgICAgIH0NCgkJfSwNCg0KCQkvLyDmmL7npLrnvJbovpHnlYzpnaINCgkJaGFuZGxlRWRpdDogZnVuY3Rpb24gKHBhcmFtcykgew0KICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQ0KICAgICAgdGhpcy5vcGVyYXRpb24gPSBmYWxzZQ0KICAgICAgdGhpcy5kYXRhRm9ybSA9IE9iamVjdC5hc3NpZ24oe30sIHBhcmFtcy5yb3cpDQogICAgICB0aGlzLnRhYkxpc3QgPSBKU09OLnBhcnNlKHRoaXMuZGF0YUZvcm0ub3dhcmVpbmZvKTsNCiAgICAgIGlmKHRoaXMuZGF0YUZvcm0ucnR5cGUgPT0gMiAmJiB0aGlzLnRhYkxpc3QubGVuZ3RoID4gMCl7DQogICAgICAgIHRoaXMudGFiSXRlbSA9IHRoaXMudGFiTGlzdFswXQ0KICAgICAgfQ0KICAgICAgbGV0IHdhcmVpbmZvID0gSlNPTi5wYXJzZSh0aGlzLmRhdGFGb3JtLndhcmVpbmZvKTsNCiAgICAgIHRoaXMuZGF0YUZvcm0ud2FyZWluZm8gPSB3YXJlaW5mby5tYXAoaXRlbSA9PiB7DQogICAgICAgIHJldHVybiBpdGVtLldBUkVOTw0KICAgICAgfSkNCiAgICAgIGxldCBwYXJhcyA9IHRoaXMucGFyYXMNCiAgICAgIGlmKHRoaXMuZGF0YUZvcm0uZ2l2ZWluZm8pew0KICAgICAgICBsZXQgcGFyYSA9IEpTT04ucGFyc2UodGhpcy5kYXRhRm9ybS5naXZlaW5mbyk7DQogICAgICAgIGZvcih2YXIgaT0wO2k8cGFyYXMubGVuZ3RoO2krKyl7DQogICAgICAgICAgZm9yKHZhciBqID0wO2o8cGFyYS5sZW5ndGggO2orKyl7DQogICAgICAgICAgICBpZihwYXJhc1tpXS5wYXJhbm8gPT0gcGFyYVtqXS5QQVJBTk8pew0KICAgICAgICAgICAgICBwYXJhW2pdID0gew0KICAgICAgICAgICAgICAgIHBhcmFubzogcGFyYXNbaV0ucGFyYW5vLA0KICAgICAgICAgICAgICAgIHBhcmFuYW1lOiBwYXJhc1tpXS5wYXJhbmFtZSwNCiAgICAgICAgICAgICAgICBwYXJhdmFsOiBwYXJhW2pdLlBBUkFWQUwsDQogICAgICAgICAgICAgICAgbGlzdERhdGE6IHBhcmFzW2ldLmxpc3REYXRhLA0KICAgICAgICAgICAgICAgIGl0ZW1zOiBwYXJhc1tpXS5pdGVtcw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHRoaXMuZGF0YUZvcm0uZ2l2ZWluZm8gPSBwYXJhDQogICAgICB9ZWxzZXsNCiAgICAgICAgdGhpcy5kYXRhRm9ybS5naXZlaW5mbyA9IHBhcmFzDQogICAgICB9DQoJCX0sDQoJCS8vIOe8lui+kQ0KCQlzdWJtaXRGb3JtOiBmdW5jdGlvbiAoKSB7DQoNCiAgICAgIGlmKHRoaXMuZGF0YUZvcm0ucnR5cGUgIT0gMiAmJiB0aGlzLnRhYkxpc3QubGVuZ3RoIDw9IDApew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLor7forr7nva7op6blj5HmnaHku7YiKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIGlmKHRoaXMuZGF0YUZvcm0ucnR5cGUgPT0gMil7DQogICAgICAgIHRoaXMudGFiTGlzdCA9IFtdDQogICAgICAgIHRoaXMudGFiTGlzdC5wdXNoKHRoaXMudGFiSXRlbSkNCiAgICAgIH0NCiAgICAgIHRoaXMuZGF0YUZvcm0ub3dhcmVpbmZvID0gSlNPTi5zdHJpbmdpZnkodGhpcy50YWJMaXN0KTsNCiAgICAgIGxldCB3YXJlaW5mbyA9IHRoaXMuZGF0YUZvcm0ud2FyZWluZm8ubWFwKGl0ZW0gPT4gew0KICAgICAgICByZXR1cm4ge1dBUkVOTzppdGVtfQ0KICAgICAgfSkNCiAgICAgIHRoaXMuZGF0YUZvcm0ud2FyZWluZm8gPSBKU09OLnN0cmluZ2lmeSh3YXJlaW5mbyk7DQogICAgICBsZXQgcGFyYSA9IHRoaXMuZGF0YUZvcm0uZ2l2ZWluZm8ubWFwKGl0ZW0gPT4gew0KICAgICAgICByZXR1cm4ge1BBUkFOTzppdGVtLnBhcmFubyxQQVJBVkFMOml0ZW0ucGFyYXZhbH0NCiAgICAgIH0pDQogICAgICB0aGlzLmRhdGFGb3JtLmdpdmVpbmZvID0gSlNPTi5zdHJpbmdpZnkocGFyYSk7DQoJCQl0aGlzLiRyZWZzLmRhdGFGb3JtLnZhbGlkYXRlKCh2YWxpZCkgPT4gew0KCQkJCWlmICh2YWxpZCkgew0KCQkJCQl0aGlzLiRjb25maXJtKCfnoa7orqTmj5DkuqTlkJfvvJ8nLCAn5o+Q56S6Jywge30pLnRoZW4oKCkgPT4gew0KCQkJCQkJdGhpcy5lZGl0TG9hZGluZyA9IHRydWUNCgkJCQkJCWxldCBwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRhdGFGb3JtKQ0KICAgICAgICAgICAgaWYodGhpcy5vcGVyYXRpb24pew0KICAgICAgICAgICAgICB0aGlzLiRhcGkud2FyZUZpcm1SdWxlLnNhdmUocGFyYW1zKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmVkaXRMb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICAgICAgICBpZihyZXMuY29kZSA9PSAyMDApIHsNCiAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoeyBtZXNzYWdlOiAn5pON5L2c5oiQ5YqfJywgdHlwZTogJ3N1Y2Nlc3MnIH0pDQogICAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQ0KICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS5yZXNldEZpZWxkcygpDQogICAgICAgICAgICAgICAgICB0aGlzLnRhYkxpc3QgPSBbXQ0KICAgICAgICAgICAgICAgICAgdGhpcy5maW5kUGFnZShudWxsKQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHttZXNzYWdlOiAn5pON5L2c5aSx6LSlLCAnICsgcmVzLm1zZywgdHlwZTogJ2Vycm9yJ30pDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfWVsc2V7DQogICAgICAgICAgICAgIHRoaXMuJGFwaS53YXJlRmlybVJ1bGUuZWRpdChwYXJhbXMpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuZWRpdExvYWRpbmcgPSBmYWxzZQ0KICAgICAgICAgICAgICAgIGlmKHJlcy5jb2RlID09IDIwMCkgew0KICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7IG1lc3NhZ2U6ICfmk43kvZzmiJDlip8nLCB0eXBlOiAnc3VjY2VzcycgfSkNCiAgICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICAgICAgICB0aGlzLmRhdGFGb3JtID0ge30NCiAgICAgICAgICAgICAgICAgIHRoaXMudGFiTGlzdCA9IFtdDQogICAgICAgICAgICAgICAgICB0aGlzLmZpbmRQYWdlKG51bGwpDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICfmk43kvZzlpLHotKUsICcgKyByZXMubXNnLCB0eXBlOiAnZXJyb3InfSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQoNCgkJCQkJfSkNCgkJCQl9DQoJCQl9KQ0KCQl9LA0KCQkvLw0KICB0ZXJ0eXBlRm9ybWF0OiBmdW5jdGlvbiAocm93LCBjb2x1bW4sIGNlbGxWYWx1ZSwgaW5kZXgpew0KICAgIGxldCB2YWwgPSAiIg0KICAgIHRyeXsNCiAgICAgIGxldCBhcnIgPSBKU09OLnBhcnNlKGNlbGxWYWx1ZSkNCiAgICAgIGZvcih2YXIgaT0wO2k8YXJyLmxlbmd0aDtpKyspew0KICAgICAgICBpZihyb3cucnR5cGUgPT0gMil7DQogICAgICAgICAgIHZhbCArPSAi5o6o6I2Q5Lq65Y2V5L2N77yaIiArYXJyW2ldLldBUkVOTyArICJcbiIgKyAiLOacgOWkp+aVsOmHj++8miIgKyBhcnJbaV0uTlVNDQogICAgICAgIH1lbHNlew0KICAgICAgICAgIHZhbCArPSAi5ZWG5ZOB57yW5Y+377yaIiArYXJyW2ldLldBUkVOTyArICIs5pWw6YeP77yaIiArIGFycltpXS5OVU0gKyAnXG4nDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9Y2F0Y2goZSl7DQogICAgICB2YWwgPSBjZWxsVmFsdWUNCiAgICB9DQoNCiAgICByZXR1cm4gdmFsDQoJfSwNCiAgd2FyZUZvcm1hdDogZnVuY3Rpb24gKHJvdywgY29sdW1uLCBjZWxsVmFsdWUsIGluZGV4KXsNCiAgICBsZXQgdmFsID0gIiINCiAgICB0cnl7DQogICAgICBsZXQgYXJyID0gSlNPTi5wYXJzZShjZWxsVmFsdWUpDQogICAgICBmb3IodmFyIGk9MDtpPGFyci5sZW5ndGg7aSsrKXsNCiAgICAgICAgdmFsICs9ICLllYblk4HnvJblj7fvvJoiICthcnJbaV0uV0FSRU5PICsgJ1xuJw0KICAgICAgfQ0KICAgIH1jYXRjaChlKXsNCiAgICAgIHZhbCA9IGNlbGxWYWx1ZQ0KICAgIH0NCg0KICAgIHJldHVybiB2YWwNCgl9LA0KICBnaXZlRm9ybWF0OiBmdW5jdGlvbiAocm93LCBjb2x1bW4sIGNlbGxWYWx1ZSwgaW5kZXgpew0KICAgIGxldCB2YWwgPSAiIg0KICAgIHRyeXsNCiAgICAgIGxldCBhcnIgPSBKU09OLnBhcnNlKGNlbGxWYWx1ZSkNCiAgICAgIGZvcih2YXIgaT0wO2k8YXJyLmxlbmd0aDtpKyspew0KICAgICAgICBsZXQgcGFyYSA9IHRoaXMucGFyYXMuZmlsdGVyKGl0ZW0gPT4gew0KICAgICAgICAgIHJldHVybiBpdGVtLnBhcmFubyA9PSBhcnJbaV0uUEFSQU5PDQogICAgICAgIH0pDQogICAgICAgIGlmKHBhcmEgJiYgcGFyYS5sZW5ndGggPiAwKXsNCiAgICAgICAgICB2YWwgKz0gcGFyYVswXS5wYXJhbmFtZSArIjoiDQogICAgICAgICAgaWYocGFyYVswXS5saXN0RGF0YSl7DQoNCiAgICAgICAgICAgIGxldCBhID0gcGFyYVswXS5pdGVtcy5maWx0ZXIodCA9PnsNCiAgICAgICAgICAgICAgcmV0dXJuIHQua2V5ID09IGFycltpXS5QQVJBVkFMDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgaWYoYSAmJiBhLmxlbmd0aCA+IDApew0KICAgICAgICAgICAgICB2YWwgKz0gYVswXS52YWwgKyAnXG4nDQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgdmFsICs9IGFycltpXS5QQVJBVkFMICsgJ1xuJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgdmFsICs9IGFycltpXS5QQVJBVkFMICsgJ1xuJw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH1jYXRjaChlKXsNCiAgICAgIHZhbCA9IGNlbGxWYWx1ZQ0KICAgIH0NCg0KICAgIHJldHVybiB2YWwNCgl9LA0KCQkvLyDlpITnkIbooajmoLzliJfov4fmu6TmmL7npLoNCglkaXNwbGF5RmlsdGVyQ29sdW1uc0RpYWxvZzogZnVuY3Rpb24gKCkgew0KCQkJdGhpcy4kcmVmcy50YWJsZUNvbHVtbkZpbHRlckRpYWxvZy5zZXREaWFsb2dWaXNpYmxlKHRydWUpDQoJfSwNCgkJLy8g5aSE55CG6KGo5qC85YiX6L+H5ruk5pi+56S6DQoJaGFuZGxlRmlsdGVyQ29sdW1uczogZnVuY3Rpb24gKGRhdGEpIHsNCgkJCXRoaXMuZmlsdGVyQ29sdW1ucyA9IGRhdGEuZmlsdGVyQ29sdW1ucw0KCQkJdGhpcy4kcmVmcy50YWJsZUNvbHVtbkZpbHRlckRpYWxvZy5zZXREaWFsb2dWaXNpYmxlKGZhbHNlKQ0KCX0sDQogIHJ0eXBlRm9ybWF0OiBmdW5jdGlvbiAocm93LCBjb2x1bW4sIGNlbGxWYWx1ZSwgaW5kZXgpew0KICAgIGxldCBpdGVtID0gdGhpcy5ydHlwZXMuZmlsdGVyKGZ1bmN0aW9uKHMpew0KICAgICAgcmV0dXJuIHMua2V5ID09IGNlbGxWYWx1ZTsNCiAgICB9KQ0KICAgIGlmKGl0ZW0gJiYgaXRlbS5sZW5ndGggPiAwKXsNCiAgICAgIHJldHVybiBpdGVtWzBdLnZhbA0KICAgIH1lbHNlew0KICAgICAgcmV0dXJuIGNlbGxWYWx1ZQ0KICAgIH0NCgl9LA0KICBpc3RyaUZvcm1hdDogZnVuY3Rpb24gKHJvdywgY29sdW1uLCBjZWxsVmFsdWUsIGluZGV4KXsNCiAgICBsZXQgaXRlbSA9IHRoaXMuaXN0cmlzLmZpbHRlcihmdW5jdGlvbihzKXsNCiAgICAgIHJldHVybiBzLmtleSA9PSBjZWxsVmFsdWU7DQogICAgfSkNCiAgICBpZihpdGVtICYmIGl0ZW0ubGVuZ3RoID4gMCl7DQogICAgICByZXR1cm4gaXRlbVswXS52YWwNCiAgICB9ZWxzZXsNCiAgICAgIHJldHVybiBjZWxsVmFsdWUNCiAgICB9DQoJfSwNCgkJLy8g5aSE55CG6KGo5qC85YiX6L+H5ruk5pi+56S6DQoJaW5pdENvbHVtbnM6IGZ1bmN0aW9uICgpIHsNCgkJCXRoaXMuY29sdW1ucyA9IFsNCiAgICAgICAge3Byb3A6InNuYW1lIiwgbGFiZWw6IuinhOWImeWQjeensCIsIG1pbldpZHRoOjEyMH0sDQogICAgICAgIHtwcm9wOiJtZW0iLCBsYWJlbDoi6KeE5YiZ6K+05piOIiwgbWluV2lkdGg6MTgwfSwNCiAgICAgICAge3Byb3A6InJ0eXBlIiwgbGFiZWw6Iuexu+WeiyIsIG1pbldpZHRoOjEyMCxmb3JtYXR0ZXI6dGhpcy5ydHlwZUZvcm1hdH0sDQoJCQkJe3Byb3A6Im93YXJlaW5mbyIsIGxhYmVsOiLop6blj5HmnaHku7YiLCBtaW5XaWR0aDoxNjAsZm9ybWF0dGVyOnRoaXMudGVydHlwZUZvcm1hdH0sDQogICAgICAgIHtwcm9wOiJ3YXJlaW5mbyIsIGxhYmVsOiLmnYPnm4rllYblk4EiLCBtaW5XaWR0aDoxMjAsZm9ybWF0dGVyOnRoaXMud2FyZUZvcm1hdH0sDQogICAgICAgIHtwcm9wOiJnaXZlaW5mbyIsIGxhYmVsOiLmnYPnm4rmmI7nu4YiLCB3aWR0aDoyNTAsZm9ybWF0dGVyOnRoaXMuZ2l2ZUZvcm1hdH0sDQogICAgICAgIHtwcm9wOiJ0cml0aW1lIiwgbGFiZWw6IuinpuWPkeaXtumXtCIsIG1pbldpZHRoOjE4MH0sDQogICAgICAgIHtwcm9wOiJpc3RyaSIsIGxhYmVsOiLmmK/lkKblvIDlkK8iLCBtaW5XaWR0aDoxNjAsZm9ybWF0dGVyOnRoaXMuaXN0cmlGb3JtYXR9DQoJCQldDQoJCQl0aGlzLmZpbHRlckNvbHVtbnMgPSB0aGlzLmNvbHVtbnM7DQoJfQ0KCX0sDQoJbW91bnRlZCgpIHsNCgkJdGhpcy5pbml0Q29sdW1ucygpDQogICAgdGhpcy5maW5kV2FyZSgpDQogICAgdGhpcy5maW5kUGFyYSgpDQoJfQ0KfQ0K"},null]}