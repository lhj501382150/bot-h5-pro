{"remainingRequest":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\bot-manager\\bot-ui\\src\\views\\Game\\Activity.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\bot-manager\\bot-ui\\src\\views\\Game\\Activity.vue","mtime":1702475008435},{"path":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace\\bot-manager\\bot-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}